name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.25']

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
        cache-dependency-path: go.sum

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Format check
      run: |
        gofmt -l .
        if [ -n "$(gofmt -l .)" ]; then
          echo "Code is not formatted. Run 'go fmt ./...'"
          exit 1
        fi

    - name: Vet
      run: go vet ./...

    - name: Test
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      if: github.event_name != 'merge_group'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.out
        fail_ci_if_error: false

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Run gosec
      uses: securego/gosec@master
      with:
        args: ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: true
        cache-dependency-path: go.sum

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.4.0
        skip-cache: false
        skip-save-cache: false

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        cache: true
        cache-dependency-path: go.sum

    - name: Build
      run: make build

    - name: Upload binary artifact
      if: github.event_name != 'merge_group'
      uses: actions/upload-artifact@v4
      with:
        name: vizvault-${{ github.sha }}
        path: bin/vizvault
        retention-days: 7

    - name: Build Docker image
      if: github.event_name != 'merge_group'
      run: docker build -t vizvault:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      if: github.event_name != 'merge_group'
      uses: aquasecurity/trivy-action@0.33.0
      with:
        image-ref: vizvault:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy results to GitHub Security tab
      if: github.event_name != 'merge_group' && !env.ACT
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
